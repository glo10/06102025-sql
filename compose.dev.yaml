# ONLY FOR LOCAL/DEV ENV
services:
  mysql:
    image: mysql:latest
    container_name: g10-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_USER: ${MYSQL_USER:-northwind}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-northwind}
    restart: unless-stopped
    volumes:
      - ./databases/:/data
  mariadb:
    image: mariadb:latest
    container_name: g10-mariadb
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:-root}
      MARIADB_USER: ${MARIADB_USER:-northwind}
      MARIADB_DATABASE: ${MARIADB_DATABASE:-northwind}
    restart: unless-stopped
    volumes:
      - ./databases/:/data
  oracle:
    image: gvenzl/oracle-free
    container_name: g10-oracle
    environment:
      APP_USER: ${APP_USER:-northwind}
      APP_USER_PASSWORD: ${APP_USER_PASSWORD:-password}
      ORACLE_PASSWORD: ${ORACLE_PASSWORD:-password}
    volumes:
      - ./databases:/data
    restart: unless-stopped
    ports:
      - 1521:1521
  postgres:
    image: postgres
    container_name: g10-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - ./databases/:/data
    restart: unless-stopped
    ports:
      - 5432:5432
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2025-latest
    container_name: g10-sqlserver
    ports:
      - 1433:1433
    environment:
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD:-admin123456+}
      MSSQL_PID: ${MSSQL_PID:-Express}
      ACCEPT_EULA: ${ACCEPT_EULA:-Y}
    restart: unless-stopped
  sqlite:
    image: alpine:latest
    container_name: g10-sqlite3
    environment:
      - DB_NAME=${DB_NAME:-northwind}
    command: >
      sh -c '
      apk add --no-cache sqlite && 
        mkdir -p /data &&
        if [ ! -f "/data/$DB_NAME.sqlite" ]; then
          sqlite3 "/data/$DB_NAME.sqlite" "CREATE TABLE IF NOT EXISTS tmp (id INTEGER);"
          echo "Database $DB_NAME created successfully."
        else
          echo "Database $DB_NAME already exists. Skipping creation."
        fi &&
        tail -f /dev/null
      '
    volumes:
      - ./databases/:/data
    develop:
      watch:
        - action: sync+restart
          path: ./databases
          target: /apps
  adminer: # UI
    image: adminer
    container_name: g10-adminer
    restart: unless-stopped
    environment:
      ADMINER_PLUGINS: "tables-filter tinymce"
    volumes:
      - ./databases:/data
    ports:
      - 8080:8080
    depends_on:
      - mysql
      - mariadb
      - postgres
      - sqlite